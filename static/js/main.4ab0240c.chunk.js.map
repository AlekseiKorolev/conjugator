{"version":3,"sources":["util/Dict.js","util/request.js","util/AllOptions.js","Components/Options/Options.js","Components/Button/Button.js","Components/Task/Task.js","Components/Field/Field.js","Components/Answer/Answer.js","Components/Challenge/Challenge.js","Components/Header/Header.js","Components/Footer/Footer.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["data","require","myData","JSON","stringify","myObj","parse","Dict","keys","item","infinitive","performer","mood","tense","requestMood","key","requestTense","AllOptions","Indicativo","Subjuntivo","Imperativo","Personas","Options","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","props","selectedOptions","indexOf","setChangeOptions","_this","map","list","push","react_default","a","createElement","className","onClick","handleClickItem","bind","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","getClassName","err","return","renderList","React","Component","Button","disabled","setEnable","createTask","Task","taskSettings","status","person","verb","Field","e","target","onChange","answer","document","querySelector","toLowerCase","onSubmit","type","id","handleInput","inputEnable","inputValue","submitClass","submitEnable","handleSubmit","Answer","hidden","showAnswer","Challenge","call","state","tenses","persons","buttonEnabled","task","changeOptions","assertThisInitialized","inputOnChange","submitAnswer","_this$setState","newSelectedOption","_this2","currentArray","otherArray","Array","isArray","_newSelectedOption","slice","every","filter","toConsumableArray","index","splice","buttonStatus","length","inputStatus","setState","defineProperty","allTenses","allPersons","reqPerson","reqTense","reqMood","allVerbs","Math","floor","random","split","includes","join","Present","error","console","warn","message","Verb","check","Options_Options_Options","setGroupChanges","groupGhanges","Button_Button_Button","Task_Task_Task","Field_Field_Field","Answer_Answer_Answer","Header","Footer","href","rel","property","App","Header_Header_Header","Challenge_Challenge_Challenge","Footer_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","App_App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ab0240c.chunk.js","sourcesContent":["const data = require(\"./base.json\");\r\n//const data = require(\"https://github.com/ghidinelli/fred-jehle-spanish-verbs/blob/master/jehle_verb_lookup.json\");\r\n\r\nconst myData = JSON.stringify(data);\r\nconst myObj = JSON.parse(myData);\r\n\r\nconst Dict = {};\r\n\r\nfor(let keys in myObj){// level of cojugared verbos\r\n\tfor(let item in myObj[keys]){// array into conjugared verbo\r\n\t\tDict[myObj[keys][item].infinitive] = {};\r\n\t}\r\n};\r\n\r\nfor(let keys in myObj){// level of cojugared verbos\r\n\tfor(let item in myObj[keys]){// array into conjugared verbo\r\n\t\tDict[myObj[keys][item].infinitive][myObj[keys][item].performer] = {};\r\n\t}\r\n};\r\n\r\nfor(let keys in myObj){// level of cojugared verbos\r\n\tfor(let item in myObj[keys]){// array into conjugared verbo\r\n\t\tDict[myObj[keys][item].infinitive][myObj[keys][item].performer][myObj[keys][item].mood] = {};\r\n\t}\r\n};\r\n\r\nfor(let keys in myObj){// level of cojugared verbos\r\n\tfor(let item in myObj[keys]){// array into conjugared verbo\r\n\t\tDict[myObj[keys][item].infinitive][myObj[keys][item].performer][myObj[keys][item].mood][myObj[keys][item].tense] = keys;\r\n\t}\r\n};\r\n\r\nexport default Dict;\r\n","import Dict from './Dict';\r\n\r\nfunction requestMood(mood, key){\r\n  if(key){\r\n    switch(mood){\r\n      case 'Indicativo': return 'Indicative';\r\n      case 'Subjuntivo': return 'Subjunctive';\r\n      case 'Imperativo Positivo': return 'Imperative Affirmative';\r\n      case 'Imperativo Negativo': return 'Imperative Negative';\r\n    }\r\n  }else{\r\n    switch(mood){\r\n      case 'Indicative': return 'Indicativo';\r\n      case 'Subjunctive': return 'Subjuntivo';\r\n      case 'Imperative Affirmative': return 'Imperativo Positivo';\r\n      case 'Imperative Negative': return 'Imperativo Negativo';\r\n    }\r\n  }\r\n}\r\n\r\nfunction requestTense(tense, key){\r\n  if(key){\r\n    switch(tense){\r\n      case 'Pretérito Indefinido': return 'Preterite';\r\n      case 'Pretérito Perfecto': return 'Present Perfect';\r\n      case 'Pretérito Imperfecto': return 'Imperfect';\r\n      case 'Pretérito Pluscuamperfecto': return 'Past Perfect';\r\n      case 'Pretérito Anterios': return 'Preterite (Archaic)';\r\n      case 'Presente': return 'Present';\r\n      case 'Gerundio': return 'Gerund';\r\n      case 'Futuro Simple': return 'Future';\r\n      case 'Futuro Compuesto': return 'Future Perfect';\r\n      case 'Condicional Simple': return 'Conditional';\r\n      case 'Condicional Compuesto': return 'Conditional Perfect';\r\n      default: return '';\r\n    }\r\n  }else{\r\n    switch(tense){\r\n      case 'Preterite': return 'Pretérito Indefinido';\r\n      case 'Present Perfect': return 'Pretérito Perfecto';\r\n      case 'Imperfect': return 'Pretérito Imperfecto';\r\n      case 'Past Perfect': return 'Pretérito Pluscuamperfecto';\r\n      case 'Preterite (Archaic)': return 'Pretérito Anterios';\r\n      case 'Present': return 'Presente';\r\n      case 'Gerund': return 'Gerundio';\r\n      case 'Future': return 'Futuro Simple';\r\n      case 'Future Perfect': return 'Futuro Compuesto';\r\n      case 'Conditional': return 'Condicional Simple';\r\n      case 'Conditional Perfect': return 'Condicional Compuesto';\r\n      default: return '';\r\n    }\r\n  }\r\n}\r\n\r\nexport const Verb = function (allTenses, allPersons){\r\n  const allVerbs = Object.keys(Dict);\r\n  let reqPerson,\r\n    reqTense,\r\n    reqMood,\r\n    verb,\r\n    person,\r\n    tense,\r\n    answer;\r\n  do {\r\n    person = allPersons[Math.floor(Math.random()*allPersons.length)];\r\n    tense = allTenses[Math.floor(Math.random()*allTenses.length)];\r\n    verb = allVerbs[Math.floor(Math.random()*allVerbs.length)];\r\n\r\n    reqPerson = person.split(' ')[1].toLowerCase();\r\n    reqMood = tense.includes('Imperativo')  ? tense : tense.split(' ')[0];\r\n    reqTense = tense.split(' ').slice(1).join(' ');\r\n\r\n    reqMood = requestMood(reqMood, true);\r\n    reqTense = requestTense(reqTense, true);\r\n\r\n    try{\r\n      if(reqMood.split(' ')[0] !== 'Imperative'){\r\n        answer = Dict[verb][reqPerson][reqMood][reqTense]\r\n      }else{\r\n        answer = Dict[verb][reqPerson][reqMood].Present\r\n      }\r\n    }catch(error){\r\n      console.warn(error.message)\r\n    }\r\n\r\n  }while(!answer)\r\n\r\n  return {\r\n    inputEnable: true,\r\n    submitEnable: false,\r\n    answer: answer,\r\n    showAnswer: false,\r\n    submitClass: '',\r\n    inputValue: '',\r\n    task: {\r\n      person: reqPerson,\r\n      verb: verb,\r\n      tense: requestMood(reqMood, false) + ' ' + requestTense(reqTense, false),\r\n      status: true,\r\n    },\r\n  }\r\n}\r\n","const AllOptions = {\r\n    Indicativo: [\r\n      'Pretérito Indefinido',\r\n      'Pretérito Perfecto',\r\n      'Pretérito Imperfecto',\r\n      'Pretérito Pluscuamperfecto',\r\n      'Pretérito Anterios',\r\n      'Presente',\r\n      'Gerundio',\r\n      //'Futuro Próximo',\r\n      'Futuro Simple',\r\n      'Futuro Compuesto',\r\n      'Condicional Simple',\r\n      'Condicional Compuesto',\r\n      ],\r\n    Subjuntivo: [\r\n      'Presente',\r\n      'Pretérito Imperfecto',\r\n      'Pretérito Perfecto',\r\n      'Pretérito Pluscuamperfecto'\r\n    ],\r\n    Imperativo: [\r\n      'Positivo',\r\n      'Negativo'\r\n    ],\r\n    Personas: [\r\n        'Yo',\r\n        'Tú',\r\n        'Él/Ella/Usted',\r\n        'Nosotros/Nosotras',\r\n        'Vosotros/Vosotras',\r\n        'Ellos/ellas/Ustedes',\r\n    ],\r\n    /*'Otros opciones': [\r\n      'Traduccion',\r\n      'Ayuda'\r\n    ]*/\r\n};\r\n\r\nexport default AllOptions;\r\n","import React from 'react';\r\nimport AllOptions from './../../util/AllOptions';\r\nimport './Options.css';\r\n\r\nexport class Options extends React.Component {\r\n\r\n  getClassName(value){\r\n    const index = this.props.selectedOptions.indexOf(value);\r\n    if(index === -1) {\r\n      return ''\r\n    }else{\r\n      return 'active'\r\n    }\r\n  }\r\n\r\n  handleClickItem(value, key){\r\n    this.props.setChangeOptions(value, key)\r\n  }\r\n\r\n  renderList(){\r\n    return Object.keys(AllOptions).map( key => {\r\n      let list = [];\r\n      list.push(<li key={ key }\r\n        className=\"listName\"\r\n        onClick={ this.handleClickItem.bind(this, AllOptions[key], key) }>{ key }</li>);\r\n      for(let item of AllOptions[key]){\r\n        list.push(\r\n          <li key={ item }\r\n            className={ 'listItem ' + this.getClassName(key + ' ' + item) }\r\n            onClick={ this.handleClickItem.bind(this, key + ' ' + item, key) }>\r\n            { item }\r\n          </li>\r\n        )\r\n      }\r\n      return <ul key={key}>{ list }</ul>\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"options\">\r\n        {this.renderList()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\nexport class Button extends React.Component {\r\n  render(){\r\n    return (\r\n      <button disabled={ !this.props.setEnable }\r\n        onClick={ this.props.createTask }>\r\n        Empezar\r\n      </button>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Task.css';\r\n\r\nexport class Task extends React.Component {\r\n\r\n\r\n  render(){\r\n    let task;\r\n    if(this.props.taskSettings.status){\r\n      task = (\r\n        <div className=\"task\">\r\n          {this.props.taskSettings.person}\r\n          &nbsp;<span className=\"bold\">{this.props.taskSettings.verb}</span>&nbsp;\r\n          {this.props.taskSettings.tense}\r\n        </div>\r\n      )\r\n    }else{\r\n      task = <div className=\"notice\">Elige tiempos y personas y empuje un botón</div>\r\n    }\r\n    return  task\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Field.css';\r\n\r\nexport class Field extends React.Component {\r\n\r\n  handleInput(e){\r\n    const value = e.target.value;\r\n    this.props.onChange(value);\r\n  }\r\n\r\n  handleSubmit(e){\r\n    const answer = document.querySelector('#field').value.toLowerCase();\r\n    this.props.onSubmit(answer);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"field\">\r\n        <input type=\"text\" id=\"field\" onChange={ this.handleInput.bind(this) }\r\n          disabled={ !this.props.inputEnable }\r\n          value={ this.props.inputValue }/>\r\n        <input type=\"submit\" value=\" \"\r\n          className={ this.props.submitClass }\r\n          disabled={ !this.props.submitEnable }\r\n          onClick={ this.handleSubmit.bind(this) }/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Answer.css';\r\n\r\nexport class Answer extends React.Component {\r\n  render(){\r\n    return(\r\n      <div>\r\n        <div className=\"answer\" hidden={ !this.props.showAnswer }>\r\n          <b>{ this.props.answer }</b>\r\n          <i>{this.props.showAnswer}</i>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Challenge.css';\r\nimport { Verb } from './../../util/request';\r\nimport { Options } from '../Options/Options';\r\nimport { Button } from '../Button/Button';\r\nimport { Task } from '../Task/Task';\r\nimport { Field } from '../Field/Field';\r\nimport { Answer } from '../Answer/Answer';\r\n\r\nexport class Challenge extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      tenses: [],\r\n      persons: [],\r\n      buttonEnabled: false,\r\n      submitEnable: false,\r\n      inputEnable: false,\r\n      inputValue: '',\r\n      submitClass: '',\r\n      answer: '',\r\n      showAnswer: false,\r\n      task: {\r\n        person: '',\r\n        verb: '',\r\n        tense: '',\r\n        status: false,\r\n      },\r\n    };\r\n    this.changeOptions = this.changeOptions.bind(this);\r\n    this.createTask = this.createTask.bind(this);\r\n    this.inputOnChange = this.inputOnChange.bind(this);\r\n    this.submitAnswer = this.submitAnswer.bind(this);\r\n  }\r\n\r\n  changeOptions(value, key){\r\n    const currentArray = key === 'Personas' ? 'persons' : 'tenses';\r\n    const otherArray = key === 'Personas' ? 'tenses' : 'persons';\r\n    let newSelectedOption;\r\n    if(Array.isArray(value)){//group slect\r\n      newSelectedOption = value.slice().map( item => key + ' ' + item);\r\n      const checkForFill = newSelectedOption.every( item => this.state[currentArray].indexOf(item) !== -1)\r\n      if(checkForFill){\r\n        newSelectedOption = this.state[currentArray].filter( item => {\r\n          if(newSelectedOption.indexOf(item) === -1){\r\n            return item\r\n          }\r\n        })\r\n      }else{\r\n        newSelectedOption.push(...this.state[currentArray].filter( item => {\r\n          if(newSelectedOption.indexOf(item) === -1){\r\n            return item\r\n          }\r\n        }))\r\n      }\r\n    }else{//single select\r\n      const index = this.state[currentArray].indexOf(value);\r\n      newSelectedOption = this.state[currentArray].slice();\r\n      if(index === -1){\r\n          newSelectedOption.push(value);\r\n      }else{\r\n          newSelectedOption.splice(index, 1);\r\n      }\r\n    }\r\n\r\n    const buttonStatus = this.state[otherArray].length !== 0 && newSelectedOption.length !== 0;\r\n    const inputStatus = buttonStatus ? this.state.inputEnable : buttonStatus;\r\n    this.setState({\r\n      [currentArray]: newSelectedOption,\r\n      buttonEnabled: buttonStatus,\r\n      inputEnable: inputStatus,\r\n      task: {\r\n        status: false,\r\n      }\r\n     });\r\n  }\r\n\r\n  createTask(){\r\n    this.setState(Verb(this.state.tenses, this.state.persons))\r\n  }\r\n\r\n  inputOnChange(value){\r\n    this.setState({\r\n      inputValue: value,\r\n      submitEnable: value.length !== 0 ? true : false\r\n    })\r\n  }\r\n\r\n  submitAnswer(inputValue){\r\n    const check = inputValue === this.state.answer;\r\n    this.setState({\r\n        submitClass: check ? 'match' : 'notmatch',\r\n        showAnswer: true,\r\n      });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"challenge\">\r\n        <Options setChangeOptions = { this.changeOptions }\r\n          setGroupChanges = { this.groupGhanges }\r\n          selectedOptions = { this.state.tenses + this.state.persons }/>\r\n        <Button setEnable={ this.state.buttonEnabled }\r\n          createTask={ this.createTask }/>\r\n        <Task taskSettings = { this.state.task }/>\r\n        <Field inputValue = { this.state.inputValue }\r\n          submitClass = { this.state.submitClass }\r\n          inputEnable = {this.state.inputEnable }\r\n          submitEnable = { this.state.submitEnable }\r\n          onChange = { this.inputOnChange }\r\n          onSubmit = { this.submitAnswer }/>\r\n        <Answer showAnswer = { this.state.showAnswer }\r\n          answer = { this.state.answer }/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nexport class Header extends React.Component {\r\n  render(){\r\n    return (\r\n      <header>\r\n        Сonjugación de verbos\r\n      </header>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nexport class Footer extends React.Component {\r\n  render(){\r\n    return(\r\n      <footer>\r\n        by <a href=\"mailto: aleksei.nik.korolev@gmail.com\">Aleksei Korolev</a> 2019\r\n        based on <a rel=\"cc:attributionURL\" property=\"cc:attributionName\" href=\"http://www.ghidinelli.com/spanish-conjugated-verb-database\">Fred Jehle</a>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Challenge } from '../Challenge/Challenge';\r\nimport { Header } from '../Header/Header';\r\nimport { Footer } from '../Footer/Footer';\r\n\r\nexport class App extends React.Component {\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <div className=\"main\">\r\n          <Challenge />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}