{"version":3,"sources":["util/dict.js","util/request.js","util/options.js","Components/Options/Options.js","Components/Button/Button.js","Components/Task/Task.js","Components/Field/Field.js","Components/Answer/Answer.js","Components/Challenge/Challenge.js","Components/Header/Header.js","Components/Footer/Footer.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["data","require","myData","JSON","stringify","myObj","parse","verbs","persons","moods","tenses","dict","requestMood","mood","key","requestTense","tense","Object","keys","map","_loop","item","infinitive","performer","_loop2","_loop3","_loop4","_loop5","AllOptions","Indicativo","Subjuntivo","Imperativo","Personas","Options","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","props","selectedOptions","indexOf","setChangeOptions","_this","list","push","react_default","a","createElement","className","onClick","handleClickItem","bind","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","getClassName","err","return","renderList","React","Component","Button","disabled","setEnable","createTask","Task","taskSettings","status","person","verb","Field","e","target","onChange","answer","document","querySelector","toLowerCase","onSubmit","type","id","handleInput","inputEnable","inputValue","submitClass","submitEnable","handleSubmit","Answer","hidden","showAnswer","Challenge","call","state","buttonEnabled","task","changeOptions","assertThisInitialized","inputOnChange","submitAnswer","_this$setState","newSelectedOption","_this2","currentArray","otherArray","Array","isArray","_newSelectedOption","slice","every","filter","toConsumableArray","index","splice","buttonStatus","length","inputStatus","setState","defineProperty","reqPerson","reqTense","reqMood","allVerbs","Math","floor","random","split","includes","join","Present","error","console","warn","message","Verb","check","Options_Options_Options","setGroupChanges","groupGhanges","Button_Button_Button","Task_Task_Task","Field_Field_Field","Answer_Answer_Answer","Header","Footer","href","rel","property","App","Header_Header_Header","Challenge_Challenge_Challenge","Footer_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","App_App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c3bf862.chunk.js","sourcesContent":["const data = require(\"./base.json\");\r\n//const data = require(\"https://github.com/ghidinelli/fred-jehle-spanish-verbs/blob/master/jehle_verb_lookup.json\");\r\n\r\nconst myData = JSON.stringify(data);\r\nconst myObj = JSON.parse(myData);\r\nexport const verbs = {};\r\nexport const persons = {};\r\nexport const moods = {};\r\nexport const tenses = {};\r\n\r\nexport const dict = {};\r\n\r\nObject.keys(myObj).map(keys => {// level of cojugared verbos\r\n\tfor(let item in myObj[keys]){// array into conjugared verbo\r\n\t\tObject.keys(myObj[keys][item]).map(key => {// keys into this array\r\n\t\t\tverbs[myObj[keys][item].infinitive] = {};\r\n\t\t\tpersons[myObj[keys][item].performer] = {};\r\n\t\t\tmoods[myObj[keys][item].mood] = {};\r\n\t\t\ttenses[myObj[keys][item].tense] = {};\r\n\t\t})\r\n\t}\r\n});\r\n\r\nObject.keys(myObj).map(keys => {// level of cojugared verbos\r\n\tfor(let item in myObj[keys]){// array into conjugared verbo\r\n\t\tObject.keys(myObj[keys][item]).map(key => {// keys into this array\r\n\t\t\tdict[myObj[keys][item].infinitive] = {};\r\n\t\t})\r\n\t}\r\n});\r\nObject.keys(myObj).map(keys => {// level of cojugared verbos\r\n\tfor(let item in myObj[keys]){// array into conjugared verbo\r\n\t\tObject.keys(myObj[keys][item]).map(key => {// keys into this array\r\n\t\t\tdict[myObj[keys][item].infinitive][myObj[keys][item].performer] = {};\r\n\t\t})\r\n\t}\r\n});\r\nObject.keys(myObj).map(keys => {// level of cojugared verbos\r\n\tfor(let item in myObj[keys]){// array into conjugared verbo\r\n\t\tObject.keys(myObj[keys][item]).map(key => {// keys into this array\r\n\t\t\tdict[myObj[keys][item].infinitive][myObj[keys][item].performer][myObj[keys][item].mood] = {};\r\n\t\t})\r\n\t}\r\n});\r\nObject.keys(myObj).map(keys => {// level of cojugared verbos\r\n\tfor(let item in myObj[keys]){// array into conjugared verbo\r\n\t\tObject.keys(myObj[keys][item]).map(key => {// keys into this array\r\n\t\t\tdict[myObj[keys][item].infinitive][myObj[keys][item].performer][myObj[keys][item].mood][myObj[keys][item].tense] = keys;\r\n\t\t})\r\n\t}\r\n});\r\n","import { verbs, persons, moods, tenses, dict } from './dict';\r\n\r\nfunction requestMood(mood, key){\r\n  if(key){\r\n    switch(mood){\r\n      case 'Indicativo': return 'Indicative';\r\n      case 'Subjuntivo': return 'Subjunctive';\r\n      case 'Imperativo Positivo': return 'Imperative Affirmative';\r\n      case 'Imperativo Negativo': return 'Imperative Negative';\r\n    }\r\n  }else{\r\n    switch(mood){\r\n      case 'Indicative': return 'Indicativo';\r\n      case 'Subjunctive': return 'Subjuntivo';\r\n      case 'Imperative Affirmative': return 'Imperativo Positivo';\r\n      case 'Imperative Negative': return 'Imperativo Negativo';\r\n    }\r\n  }\r\n}\r\n\r\nfunction requestTense(tense, key){\r\n  if(key){\r\n    switch(tense){\r\n      case 'Pretérito Indefinido': return 'Preterite';\r\n      case 'Pretérito Perfecto': return 'Present Perfect';\r\n      case 'Pretérito Imperfecto': return 'Imperfect';\r\n      case 'Pretérito Pluscuamperfecto': return 'Past Perfect';\r\n      case 'Pretérito Anterios': return 'Preterite (Archaic)';\r\n      case 'Presente': return 'Present';\r\n      case 'Gerundio': return 'Gerund';\r\n      case 'Futuro Simple': return 'Future';\r\n      case 'Futuro Compuesto': return 'Future Perfect';\r\n      case 'Condicional Simple': return 'Conditional';\r\n      case 'Condicional Compuesto': return 'Conditional Perfect';\r\n      default: return '';\r\n    }\r\n  }else{\r\n    switch(tense){\r\n      case 'Preterite': return 'Pretérito Indefinido';\r\n      case 'Present Perfect': return 'Pretérito Perfecto';\r\n      case 'Imperfect': return 'Pretérito Imperfecto';\r\n      case 'Past Perfect': return 'Pretérito Pluscuamperfecto';\r\n      case 'Preterite (Archaic)': return 'Pretérito Anterios';\r\n      case 'Present': return 'Presente';\r\n      case 'Gerund': return 'Gerundio';\r\n      case 'Future': return 'Futuro Simple';\r\n      case 'Future Perfect': return 'Futuro Compuesto';\r\n      case 'Conditional': return 'Condicional Simple';\r\n      case 'Conditional Perfect': return 'Condicional Compuesto';\r\n      default: return '';\r\n    }\r\n  }\r\n}\r\n\r\nexport const Verb = function (tenses, persons){\r\n  const allVerbs = Object.keys(verbs);\r\n  let reqPerson,\r\n    reqTense,\r\n    reqMood,\r\n    verb,\r\n    person,\r\n    tense,\r\n    answer;\r\n  do {\r\n    person = persons[Math.floor(Math.random()*persons.length)];\r\n    tense = tenses[Math.floor(Math.random()*tenses.length)];\r\n    verb = allVerbs[Math.floor(Math.random()*allVerbs.length)];\r\n\r\n    reqPerson = person.split(' ')[1].toLowerCase();\r\n    reqMood = tense.includes('Imperativo')  ? tense : tense.split(' ')[0];\r\n    reqTense = tense.split(' ').slice(1).join(' ');\r\n\r\n    reqMood = requestMood(reqMood, true);\r\n    reqTense = requestTense(reqTense, true);\r\n\r\n    //console.log(`Request dict.${verb}.${reqPerson}.${reqMood}.${reqTense}`)\r\n    try{\r\n      if(reqMood.split(' ')[0] !== 'Imperative'){\r\n        answer = dict[verb][reqPerson][reqMood][reqTense]\r\n      }else{\r\n        answer = dict[verb][reqPerson][reqMood].Present\r\n      }\r\n    }catch(error){\r\n      console.warn(error.message)\r\n    }\r\n\r\n  }while(!answer)\r\n\r\n  return {\r\n    inputEnable: true,\r\n    submitEnable: false,\r\n    answer: answer,\r\n    showAnswer: false,\r\n    submitClass: '',\r\n    inputValue: '',\r\n    task: {\r\n      person: reqPerson,\r\n      verb: verb,\r\n      tense: requestMood(reqMood, false) + ' ' + requestTense(reqTense, false),\r\n      status: true,\r\n    },\r\n  }\r\n}\r\n","const AllOptions = {\r\n    Indicativo: [\r\n      'Pretérito Indefinido',\r\n      'Pretérito Perfecto',\r\n      'Pretérito Imperfecto',\r\n      'Pretérito Pluscuamperfecto',\r\n      'Pretérito Anterios',\r\n      'Presente',\r\n      'Gerundio',\r\n      //'Futuro Próximo',\r\n      'Futuro Simple',\r\n      'Futuro Compuesto',\r\n      'Condicional Simple',\r\n      'Condicional Compuesto',\r\n      ],\r\n    Subjuntivo: [\r\n      'Presente',\r\n      'Pretérito Imperfecto',\r\n      'Pretérito Perfecto',\r\n      'Pretérito Pluscuamperfecto'\r\n    ],\r\n    Imperativo: [\r\n      'Positivo',\r\n      'Negativo'\r\n    ],\r\n    Personas: [\r\n        'Yo',\r\n        'Tú',\r\n        'Él/Ella/Usted',\r\n        'Nosotros/Nosotras',\r\n        'Vosotros/Vosotras',\r\n        'Ellos/ellas/Ustedes',\r\n    ],\r\n    /*'Otros opciones': [\r\n      'Traduccion',\r\n      'Ayuda'\r\n    ]*/\r\n};\r\n\r\nexport default AllOptions;\r\n","import React from 'react';\r\nimport AllOptions from './../../util/options';\r\nimport './Options.css';\r\n\r\nexport class Options extends React.Component {\r\n\r\n  getClassName(value){\r\n    const index = this.props.selectedOptions.indexOf(value);\r\n    if(index === -1) {\r\n      return ''\r\n    }else{\r\n      return 'active'\r\n    }\r\n  }\r\n\r\n  handleClickItem(value, key){\r\n    this.props.setChangeOptions(value, key)\r\n  }\r\n\r\n  renderList(){\r\n    return Object.keys(AllOptions).map( key => {\r\n      let list = [];\r\n      list.push(<li key={ key }\r\n        className=\"listName\"\r\n        onClick={ this.handleClickItem.bind(this, AllOptions[key], key) }>{ key }</li>);\r\n      for(let item of AllOptions[key]){\r\n        list.push(\r\n          <li key={ item }\r\n            className={ 'listItem ' + this.getClassName(key + ' ' + item) }\r\n            onClick={ this.handleClickItem.bind(this, key + ' ' + item, key) }>\r\n            { item }\r\n          </li>\r\n        )\r\n      }\r\n      return <ul key={key}>{ list }</ul>\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"options\">\r\n        {this.renderList()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\nexport class Button extends React.Component {\r\n  render(){\r\n    return (\r\n      <button disabled={ !this.props.setEnable }\r\n        onClick={ this.props.createTask }>\r\n        Empezar\r\n      </button>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Task.css';\r\n\r\nexport class Task extends React.Component {\r\n\r\n\r\n  render(){\r\n    let task;\r\n    if(this.props.taskSettings.status){\r\n      task = (\r\n        <div className=\"task\">\r\n          {this.props.taskSettings.person}\r\n          &nbsp;<span className=\"bold\">{this.props.taskSettings.verb}</span>&nbsp;\r\n          {this.props.taskSettings.tense}\r\n        </div>\r\n      )\r\n    }else{\r\n      task = <div className=\"notice\">Elige tiempos y personas y empuje un botón</div>\r\n    }\r\n    return  task\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Field.css';\r\n\r\nexport class Field extends React.Component {\r\n\r\n  handleInput(e){\r\n    const value = e.target.value;\r\n    this.props.onChange(value);\r\n  }\r\n\r\n  handleSubmit(e){\r\n    const answer = document.querySelector('#field').value.toLowerCase();\r\n    this.props.onSubmit(answer);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"field\">\r\n        <input type=\"text\" id=\"field\" onChange={ this.handleInput.bind(this) }\r\n          disabled={ !this.props.inputEnable }\r\n          value={ this.props.inputValue }/>\r\n        <input type=\"submit\" value=\" \"\r\n          className={ this.props.submitClass }\r\n          disabled={ !this.props.submitEnable }\r\n          onClick={ this.handleSubmit.bind(this) }/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Answer.css';\r\n\r\nexport class Answer extends React.Component {\r\n  render(){\r\n    return(\r\n      <div>\r\n        <div className=\"answer\" hidden={ !this.props.showAnswer }>\r\n          <b>{ this.props.answer }</b>\r\n          <i>{this.props.showAnswer}</i>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Challenge.css';\r\nimport { Verb } from './../../util/request';\r\nimport { Options } from '../Options/Options';\r\nimport { Button } from '../Button/Button';\r\nimport { Task } from '../Task/Task';\r\nimport { Field } from '../Field/Field';\r\nimport { Answer } from '../Answer/Answer';\r\n\r\nexport class Challenge extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      tenses: [],\r\n      persons: [],\r\n      buttonEnabled: false,\r\n      submitEnable: false,\r\n      inputEnable: false,\r\n      inputValue: '',\r\n      submitClass: '',\r\n      answer: '',\r\n      showAnswer: false,\r\n      task: {\r\n        person: '',\r\n        verb: '',\r\n        tense: '',\r\n        status: false,\r\n      },\r\n    };\r\n    this.changeOptions = this.changeOptions.bind(this);\r\n    this.createTask = this.createTask.bind(this);\r\n    this.inputOnChange = this.inputOnChange.bind(this);\r\n    this.submitAnswer = this.submitAnswer.bind(this);\r\n  }\r\n\r\n  changeOptions(value, key){\r\n    const currentArray = key === 'Personas' ? 'persons' : 'tenses';\r\n    const otherArray = key === 'Personas' ? 'tenses' : 'persons';\r\n    let newSelectedOption;\r\n    if(Array.isArray(value)){//group slect\r\n      newSelectedOption = value.slice().map( item => key + ' ' + item);\r\n      const checkForFill = newSelectedOption.every( item => this.state[currentArray].indexOf(item) !== -1)\r\n      if(checkForFill){\r\n        newSelectedOption = this.state[currentArray].filter( item => {\r\n          if(newSelectedOption.indexOf(item) === -1){\r\n            return item\r\n          }\r\n        })\r\n      }else{\r\n        newSelectedOption.push(...this.state[currentArray].filter( item => {\r\n          if(newSelectedOption.indexOf(item) === -1){\r\n            return item\r\n          }\r\n        }))\r\n      }\r\n    }else{//single select\r\n      const index = this.state[currentArray].indexOf(value);\r\n      newSelectedOption = this.state[currentArray].slice();\r\n      if(index === -1){\r\n          newSelectedOption.push(value);\r\n      }else{\r\n          newSelectedOption.splice(index, 1);\r\n      }\r\n    }\r\n\r\n    const buttonStatus = this.state[otherArray].length !== 0 && newSelectedOption.length !== 0;\r\n    const inputStatus = buttonStatus ? this.state.inputEnable : buttonStatus;\r\n    this.setState({\r\n      [currentArray]: newSelectedOption,\r\n      buttonEnabled: buttonStatus,\r\n      inputEnable: inputStatus,\r\n      task: {\r\n        status: false,\r\n      }\r\n     });\r\n  }\r\n\r\n  createTask(){\r\n    this.setState(Verb(this.state.tenses, this.state.persons))\r\n  }\r\n\r\n  inputOnChange(value){\r\n    this.setState({\r\n      inputValue: value,\r\n      submitEnable: value.length !== 0 ? true : false\r\n    })\r\n  }\r\n\r\n  submitAnswer(inputValue){\r\n    const check = inputValue === this.state.answer;\r\n    this.setState({\r\n        submitClass: check ? 'match' : 'notmatch',\r\n        showAnswer: true,\r\n      });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"challenge\">\r\n        <Options setChangeOptions = { this.changeOptions }\r\n          setGroupChanges = { this.groupGhanges }\r\n          selectedOptions = { this.state.tenses + this.state.persons }/>\r\n        <Button setEnable={ this.state.buttonEnabled }\r\n          createTask={ this.createTask }/>\r\n        <Task taskSettings = { this.state.task }/>\r\n        <Field inputValue = { this.state.inputValue }\r\n          submitClass = { this.state.submitClass }\r\n          inputEnable = {this.state.inputEnable }\r\n          submitEnable = { this.state.submitEnable }\r\n          onChange = { this.inputOnChange }\r\n          onSubmit = { this.submitAnswer }/>\r\n        <Answer showAnswer = { this.state.showAnswer }\r\n          answer = { this.state.answer }/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nexport class Header extends React.Component {\r\n  render(){\r\n    return (\r\n      <header>\r\n        Сonjugación de verbos\r\n      </header>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nexport class Footer extends React.Component {\r\n  render(){\r\n    return(\r\n      <footer>\r\n        by <a href=\"mailto: aleksei.nik.korolev@gmail.com\">Aleksei Korolev</a> 2019\r\n        based on <a rel=\"cc:attributionURL\" property=\"cc:attributionName\" href=\"http://www.ghidinelli.com/spanish-conjugated-verb-database\">Fred Jehle</a>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Challenge } from '../Challenge/Challenge';\r\nimport { Header } from '../Header/Header';\r\nimport { Footer } from '../Footer/Footer';\r\n\r\nexport class App extends React.Component {\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <div className=\"main\">\r\n          <Challenge />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}